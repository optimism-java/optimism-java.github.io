"use strict";(self.webpackChunkoptimism_java=self.webpackChunkoptimism_java||[]).push([[12],{2360:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var s=n(4848),c=n(8453);const o={},r="blob-archiver-rs",i={id:"blob-archiver-rs-docs/index",title:"blob-archiver-rs",description:"This is a Rust implementation of",source:"@site/docs/blob-archiver-rs-docs/index.md",sourceDirName:"blob-archiver-rs-docs",slug:"/blob-archiver-rs-docs/",permalink:"/blob-archiver-rs-docs/",draft:!1,unlisted:!1,editUrl:"https://github.com/optimism-java/optimism-java.github.io/tree/main/docs/blob-archiver-rs-docs/index.md",tags:[],version:"current",lastUpdatedBy:"thinkAfCod",lastUpdatedAt:1742539292e3,frontMatter:{},sidebar:"blobArchiverRs"},a={},d=[{value:"Storage",id:"storage",level:3},{value:"Development",id:"development",level:3},{value:"Run Locally",id:"run-locally",level:4},{value:"Get blobs",id:"get-blobs",level:4},{value:"Storage Dashboard",id:"storage-dashboard",level:4},{value:"Options",id:"options",level:2},{value:"<code>verbose</code>",id:"verbose",level:3},{value:"<code>log_dir</code>",id:"log_dir",level:3},{value:"<code>log_rotation</code>",id:"log_rotation",level:3},{value:"<code>beacon_endpoint</code>",id:"beacon_endpoint",level:3},{value:"<code>beacon_client_timeout</code>",id:"beacon_client_timeout",level:3},{value:"<code>poll_interval</code>",id:"poll_interval",level:3},{value:"<code>listen_addr</code>",id:"listen_addr",level:3},{value:"<code>origin_block</code>",id:"origin_block",level:3},{value:"<code>storage_type</code>",id:"storage_type",level:3},{value:"<code>s3_endpoint</code>",id:"s3_endpoint",level:3},{value:"<code>s3_bucket</code>",id:"s3_bucket",level:3},{value:"<code>s3_path</code>",id:"s3_path",level:3},{value:"<code>s3_compress</code>",id:"s3_compress",level:3},{value:"<code>fs_dir</code>",id:"fs_dir",level:3}];function t(e){const l={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.h1,{id:"blob-archiver-rs",children:"blob-archiver-rs"}),"\n",(0,s.jsxs)(l.p,{children:["This is a Rust implementation of\nthe ",(0,s.jsx)(l.a,{href:"https://github.com/base/blob-archiver",children:"Beacon Chain blob archiver"})]}),"\n",(0,s.jsx)(l.p,{children:"The Blob Archiver is a service to archive and allow querying of all historical blobs from the beacon chain. It consists\nof two components:"}),"\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsxs)(l.li,{children:[(0,s.jsx)(l.strong,{children:"Archiver"})," - Tracks the beacon chain and writes blobs to a storage backend"]}),"\n",(0,s.jsxs)(l.li,{children:[(0,s.jsx)(l.strong,{children:"API"})," - Implements the blob sidecars ",(0,s.jsx)(l.a,{href:"https://ethereum.github.io/beacon-APIs/#/Beacon/getBlobSidecars",children:"API"}),", which\nallows clients to retrieve blobs from the storage backend"]}),"\n"]}),"\n",(0,s.jsx)(l.h3,{id:"storage",children:"Storage"}),"\n",(0,s.jsx)(l.p,{children:"There are currently two supported storage options:"}),"\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"On-disk storage - Blobs are written to disk in a directory"}),"\n",(0,s.jsx)(l.li,{children:"S3 storage - Blobs are written to an S3 bucket (or compatible service)"}),"\n"]}),"\n",(0,s.jsxs)(l.p,{children:["You can control which storage backend is used by setting the ",(0,s.jsx)(l.code,{children:"STORAGE_TYPE"})," to\neither ",(0,s.jsx)(l.code,{children:"file"})," or ",(0,s.jsx)(l.code,{children:"s3"}),"."]}),"\n",(0,s.jsxs)(l.p,{children:["The ",(0,s.jsx)(l.code,{children:"s3"})," backend will also work with (for example) Google Cloud Storage buckets (instructions ",(0,s.jsx)(l.a,{href:"https://medium.com/google-cloud/using-google-cloud-storage-with-minio-object-storage-c994fe4aab6b",children:"here"}),")."]}),"\n",(0,s.jsx)(l.h3,{id:"development",children:"Development"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-sh",children:"# Run the tests\ncargo test --workspace --all-features --all-targets --locked\n\n# Lint the project\ncargo clippy --workspace --all-targets --all-features -- -D warnings\n\n# Build the project\ncargo build --workspace --all-targets --all-features\n\n"})}),"\n",(0,s.jsx)(l.h4,{id:"run-locally",children:"Run Locally"}),"\n",(0,s.jsxs)(l.p,{children:["To run the project locally, you should first copy ",(0,s.jsx)(l.code,{children:".env.template"})," to ",(0,s.jsx)(l.code,{children:".env"})," and then modify the environment variables\nto your beacon client and storage backend of choice. Then you can run the project with:"]}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-sh",children:"docker compose up\n"})}),"\n",(0,s.jsx)(l.h4,{id:"get-blobs",children:"Get blobs"}),"\n",(0,s.jsx)(l.p,{children:"After successfully starting the service, you can use the following command to obtain the blob:"}),"\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"get blob by block id from api service:"}),"\n"]}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"# also there is support other type of block id, like: finalized,justified.\ncurl -X 'GET' 'http://localhost:8000/eth/v1/beacon/blob_sidecars/head' -H 'accept: application/json'\n"})}),"\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"get blob by slot number from api service:"}),"\n"]}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"curl -X 'GET' 'http://localhost:8000/eth/v1/beacon/blob_sidecars/7111008' -H 'accept: application/json'\n"})}),"\n",(0,s.jsx)(l.h4,{id:"storage-dashboard",children:"Storage Dashboard"}),"\n",(0,s.jsx)(l.p,{children:"MinIO has started the dashboard, allowing you to view the status of blob storage.\nBy default, you can access it directly at:"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-http",children:"http://localhost:9999\n"})}),"\n",(0,s.jsx)(l.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(l.h3,{id:"verbose",children:(0,s.jsx)(l.code,{children:"verbose"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--verbose=<VERBOSE>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--verbose=2\n"})}),"\n",(0,s.jsx)(l.h3,{id:"log_dir",children:(0,s.jsx)(l.code,{children:"log_dir"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--log_dir=<LOG_DIR>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--log_dir=/var/log/blob-archiver\n"})}),"\n",(0,s.jsx)(l.h3,{id:"log_rotation",children:(0,s.jsx)(l.code,{children:"log_rotation"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--log_rotation=<LOG_ROTATION>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--log_rotation=DAILY\n"})}),"\n",(0,s.jsx)(l.h3,{id:"beacon_endpoint",children:(0,s.jsx)(l.code,{children:"beacon_endpoint"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--beacon_endpoint=<BEACON_ENDPOINT>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--beacon_endpoint=http://localhost:5052\n"})}),"\n",(0,s.jsx)(l.h3,{id:"beacon_client_timeout",children:(0,s.jsx)(l.code,{children:"beacon_client_timeout"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--beacon_client_timeout=<BEACON_CLIENT_TIMEOUT>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--beacon_client_timeout=10\n"})}),"\n",(0,s.jsx)(l.h3,{id:"poll_interval",children:(0,s.jsx)(l.code,{children:"poll_interval"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--poll_interval=<POLL_INTERVAL>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--poll_interval=6\n"})}),"\n",(0,s.jsx)(l.h3,{id:"listen_addr",children:(0,s.jsx)(l.code,{children:"listen_addr"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--listen_addr=<LISTEN_ADDR>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--listen_addr=0.0.0.0:8000\n"})}),"\n",(0,s.jsx)(l.h3,{id:"origin_block",children:(0,s.jsx)(l.code,{children:"origin_block"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--origin_block=<ORIGIN_BLOCK>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:'--origin_block="0x0"\n'})}),"\n",(0,s.jsx)(l.h3,{id:"storage_type",children:(0,s.jsx)(l.code,{children:"storage_type"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--storage_type=<STORAGE_TYPE>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:'--storage_type="s3"\n'})}),"\n",(0,s.jsx)(l.h3,{id:"s3_endpoint",children:(0,s.jsx)(l.code,{children:"s3_endpoint"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--s3_endpoint=<S3_ENDPOINT>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:'--s3_endpoint="http://localhost:9000"\n'})}),"\n",(0,s.jsx)(l.h3,{id:"s3_bucket",children:(0,s.jsx)(l.code,{children:"s3_bucket"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--s3_bucket=<S3_BUCKET>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:'--s3_bucket="blobs"\n'})}),"\n",(0,s.jsx)(l.h3,{id:"s3_path",children:(0,s.jsx)(l.code,{children:"s3_path"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--s3_path=<S3_PATH>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--s3_path=/blobs\n"})}),"\n",(0,s.jsx)(l.h3,{id:"s3_compress",children:(0,s.jsx)(l.code,{children:"s3_compress"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--s3_compress=<S3_COMPRESS>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--s3_compress=false\n"})}),"\n",(0,s.jsx)(l.h3,{id:"fs_dir",children:(0,s.jsx)(l.code,{children:"fs_dir"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--fs_dir=<FS_DIR>\n"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-shell",children:"--fs_dir=/blobs\n"})})]})}function h(e={}){const{wrapper:l}={...(0,c.R)(),...e.components};return l?(0,s.jsx)(l,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,l,n)=>{n.d(l,{R:()=>r,x:()=>i});var s=n(6540);const c={},o=s.createContext(c);function r(e){const l=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function i(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),s.createElement(o.Provider,{value:l},e.children)}}}]);